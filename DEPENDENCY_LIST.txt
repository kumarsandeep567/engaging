# Create laravel app named 'engaging'
composer create-project laravel/laravel engaging

# Change .env file to use mysql instead of sqlite

# Migrate the Database to the server
php artisan migrate

# Start server
php artisan serve

# Download breeze
composer require laravel/breeze --dev

# Configure and install Breeze stack
php artisan breeze:install
(Choose the following: react -> dark -> Pest)

# Install the following dependencies
# 1. Headless ui (for tailwindcss UI components without styling)
# 2. Hero icons (Lightweight SVG icons)
# 3. Daisy UI (tailwindcss components library)
# 4. React emoji picker (react based WhatsApp like emojis)
# 5. React Markdown (to add markdown functionality)
# 6. UUID (to generate random UUIDs)
npm install @headlessui/react @heroicons/react daisyui emoji-picker-react react-markdown uuid

# Install Laravel Reverb (to broadcast messages to all users)
php artisan install:


# Create the tables (models) in the database (and generate the migrations as well)
php artisan make:model Group -m
php artisan make:model Conversation -m
php artisan make:model Message -m
php artisan make:model MessageAttachment -m 

# Create Factories (for Group and Message) and seed some data
php artisan make:Factory GroupFactory
php artisan make:Factory MessageFactory

# Create the HomeController
php artisan make:controller HomeController

# Start the vite server in a new terminal (to serve React)
npm run dev

# Start the Laravel Reverb server (in debug mode)
php artisan reverb:start --debug

# To avoid sensitive data from being exposed in the presence channel (or any other channel)
# create a resource 
php artisan make:resource UserResource

# Create the messages controller
php artisan make:controller MessageController

# Create the request class (for messages)
php artisan make:request StoreMessageRequest

# Create the message resource
php artisan make:resource MessageResource

# Create a Websocket event that will be used to push information to the browser
php artisan make:event SocketMessage

# Create the message attachment resource
php artisan make:resource MessageAttachmentResource

# Create a message observer to delete the message's attachments if a message
# is deleted
php artisan make:observer MessageObserver


Site wide dark theme
https://daisyui.com/components/theme-controller/